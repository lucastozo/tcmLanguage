#define elem_a reg0
#define elem_b reg1
#define array_len reg3
#define swap_occurred reg4

// Fill ram with some numbers, this will be our "array" to sort
mov 5 to ram
next address
mov 3 to ram
next address
mov 1 to ram
next address
mov 10 to ram
next address
mov 7 to ram

mov address to array_len

label lab_loop1
mov 0 to address
mov 0 to swap_occurred

label lab_loop2
mov ram to elem_a
next address
mov ram to elem_b
if_grt reg0 reg1 sub_swap
if_les address array_len lab_loop2
if_eql swap_occurred 1 lab_loop1

mov 0 to address
label lab_outputSorted
print ram
next address
if_loe address array_len lab_outputSorted
halt

subroutine sub_swap
previous address
mov elem_b to ram
next address
mov elem_a to ram
mov 1 to swap_occurred
return
