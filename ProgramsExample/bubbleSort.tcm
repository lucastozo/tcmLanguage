#define false 0
#define true 1
#define elem_a reg0
#define elem_b reg1
#define array_len reg3
#define swap_occurred reg4

// Fill ram with some numbers, this will be our "array" to sort
ram = 5
next address
ram = 3
next address
ram = 1
next address
ram = 10
next address
ram = 7

array_len = address

label lab_loop1
address = 0
swap_occurred = 0

label lab_loop2
elem_a = ram
next address
elem_b = ram
if reg0 > reg1 sub_swap
if address < array_len lab_loop2
if swap_occurred == true lab_loop1

address = 0
label lab_outputSorted
print ram
next address
if address <= array_len lab_outputSorted
halt

subroutine sub_swap
previous address
ram = elem_b
next address
ram = elem_a
swap_occurred = true
return
