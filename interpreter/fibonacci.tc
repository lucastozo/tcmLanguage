# Program to calculate nth fibonacci number
# Each instruction (line of code) must contain 4 byte numbers (0 to 255)
# Each instruction must follow the structure [OPCODE] [ARG1] [ARG2] [DESTINATION]
# Everything after the '#' character in a line represents a comment and must be ignored

const N 8 # Define limit
COPY_CONST 1 TO REG1 # REG1 = 1
COPY_CONST N TO REG4 # REG4 = N

JMP NOW TO lab_loop # goto lab_loop

label sub_storeRam # subroutine to show how "functions" work in this language
MOV REG2 TO RAM # Current address in ram will store the value contained in REG2
NEXT ADDRESS IN MEMORY # Foward address in ram
RETURN BACK TO CALLER

label lab_loop
NEXT REG3 IN REG3 # REG3++
ADD REG0 REG1 REG2 # REG2 = REG0+REG1
MOV REG1 TO REG0 # REG0 = REG1
MOV REG2 TO REG1 # REG1 = REG2
MOV REG2 TO OUTPUT # print(REG2)
IF_LES REG3 REG4 lab_loop # if REG3 < REG4 then goto lab_loop

CALL NOW SUBROUTINE sub_storeRam # will now execute subroutine
COPY_CONST 0 TO OUTPUT # Finish program (since its the last line) with code 0